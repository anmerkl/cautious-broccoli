AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Accepts and transforms Facebook data
Parameters:
  TeamName:
    Type: String
  InputService:
    Type: String
  BucketName:
    Type: String
Resources: 
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${TeamName}-${InputService}-Topic"
      Subscription:
      - Protocol: lambda
        Endpoint: !GetAtt TransformLambda.Arn
  InjestLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${TeamName}-${InputService}-Ingest"
      Handler: fb_ingest.handler
      Runtime: python3.6
      Timeout: 10
      CodeUri: ./
      Policies:
        Statement:
          - Effect: Allow
            Action: SNS:Publish
            Resource: !Ref SNSTopic
      Events:
        FBApi:
          Type: Api
          Properties:
            Path: /
            Method: Any
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref SNSTopic
  TransformLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${TeamName}-${InputService}-Transform"
      Handler: fb_transform.handler
      Runtime: python3.6
      Timeout: 60
      CodeUri: ./
      Policies:
        Statement:
          - Effect: Allow
            Action: S3:PutObject
            Resource: !GetAtt OutputBucket.Arn
          - Effect: Allow
            Action: DynamoDB:PutItem
            Resource: !GetAtt CustomerTable.Arn
      Events:
        FBSNS:
          Type: SNS
          Properties:
            Topic: !Ref SNSTopic
      Environment:
        Variables:
          S3_BUCKET: !Ref OutputBucket
          CUSTOMER_TABLE: !Ref CustomerTable
  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${BucketName}"
  TransformInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref TransformLambda
      Principal: sns.amazonaws.com
  StreamLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: stream_lambda.handler
      Runtime: python3.6
      CodeUri: ./
      Policies: AWSLambdaDynamoDBExecutionRole
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt CustomerTable.StreamArn
            BatchSize: 100
            StartingPosition: LATEST
  CustomerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
      StreamSpecification:
        StreamViewType: NEW_IMAGE